[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "idyllic-python"
version = "0.1.0"
description = "An idyllic Python web application using Litestar"
readme = "README.md"
license = "MIT"
requires-python = ">=3.12"
authors = [{ name = "Your Name", email = "your.email@example.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "litestar[standard]>=2.0.0",
    "pydantic>=2.10.6",
    "uvicorn[standard]>=0.20.0",
]
[dependency-groups]
dev = [
    "black>=24.8.0",
    "httpx>=0.28.1",
    "isort>=5.13.2",
    "mypy>=1.14.1",
    "pylint>=3.2.7",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.2.1",
    "pytest-watch>=4.2.0",
    "radon>=6.0.1",
    "ruff>=0.12.8",
]

[project.urls]
Homepage = "https://github.com/yourusername/idyllic-python"
Repository = "https://github.com/yourusername/idyllic-python"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
]
ignore = [
    "B008",   # do not perform function calls in argument defaults
    "ARG001", # unused function argument
    "ARG002", # unused method argument
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["ARG", "S101"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.pylint.main]
load-plugins = ["pylint.extensions.docparams"]

[tool.pylint.messages_control]
disable = ["too-few-public-methods", "duplicate-code", "fixme"]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 8
max-locals = 20
max-returns = 8
max-branches = 15
max-statements = 60
